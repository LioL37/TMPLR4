name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: poma
          POSTGRES_DB: lr4
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Create test database
        run: |
          psql -h localhost -U postgres -c "CREATE DATABASE lr4_test;"
        env:
          PGPASSWORD: poma

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest 

      - name: Run tests
        run: pytest tests/ -v
        env:
          DATABASE_URL: postgresql://postgres:poma@localhost/lr4_test

      - name: Deploy to server via SSH
        if: github.ref == 'refs/heads/main' && success()
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          port: 5670
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/TMPLR4/
            docker-compose pull
            docker-compose up -d --build
